{"ast":null,"code":"var _jsxFileName = \"/home/yoav/autocomplete-search/client/src/AutocompleteSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport SearchResults from './SearchResults';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AutocompleteSearch() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [searchResults, setSearchResults] = useState(null);\n  const [totalResults, setTotalResults] = useState(0);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    if (isFocused) {\n      fetch('http://localhost:3000/api/history').then(response => response.json()).then(data => {\n        setHistory(data);\n        setIsVisible(true);\n      }).catch(error => {\n        console.error(error);\n      });\n      setResults(history);\n      setOpen(true);\n    } else {\n      setTimeout(() => {\n        setIsVisible(false);\n      }, 200);\n    }\n  }, [isFocused]);\n  const handleChange = event => {\n    setQuery(event.target.value);\n    setOpen(true);\n  };\n  const handleSelect = suggestion => {\n    setQuery(suggestion);\n    setResults([]);\n    setOpen(false);\n\n    // store search history\n    fetch('http://localhost:3000/api/history/saveSearch', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n\n    // retrieve search results from Google search API\n    fetch(`https://www.googleapis.com/customsearch/v1?key=AIzaSyBXFNm4nYQ6Jhco9Chz2-5D4hSAaSxsoH8&cx=86d9fef699de14b93&q=${suggestion}`).then(response => response.json()).then(data => {\n      setSearchResults(data.items);\n      setTotalResults(data.searchInformation.totalResults);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  useEffect(() => {\n    if (query.length > 0) {\n      // retrieve suggestions from API\n      fetch(`http://localhost:5000/api/suggestions?q=${query}`).then(response => response.json()).then(data => {\n        setResults(data.map(suggestion => ({\n          ...suggestion,\n          inHistory: history.includes(suggestion.query)\n        })));\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      setResults([]);\n      setOpen(false);\n    }\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      className: open ? 'search-input no-border' : 'search-input',\n      placeholder: \"Search...\",\n      type: \"text\",\n      value: query,\n      onChange: handleChange,\n      onFocus: () => setIsFocused(true),\n      onBlur: () => setIsFocused(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 8\n    }, this), open && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"autocomplete-suggestions\",\n      children: results.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `autocomplete-suggestion ${result.inHistory ? 'in-history' : ''}`,\n        onClick: () => handleSelect(result.query),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"autocomplete-suggestion-text\",\n          children: result.query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, result._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 18\n    }, this), totalResults > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-results-info\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"About \", totalResults, \" results\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), searchResults && /*#__PURE__*/_jsxDEV(SearchResults, {\n      results: searchResults\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n_s(AutocompleteSearch, \"FdYYonCWWbncrHXKxwvUfaiBPAE=\");\n_c = AutocompleteSearch;\nexport default AutocompleteSearch;\nvar _c;\n$RefreshReg$(_c, \"AutocompleteSearch\");","map":{"version":3,"names":["React","useState","useEffect","useRef","SearchResults","AutocompleteSearch","query","setQuery","results","setResults","open","setOpen","isFocused","setIsFocused","isVisible","setIsVisible","history","setHistory","searchResults","setSearchResults","totalResults","setTotalResults","inputRef","fetch","then","response","json","data","catch","error","console","setTimeout","handleChange","event","target","value","handleSelect","suggestion","method","headers","body","JSON","stringify","log","items","searchInformation","length","map","inHistory","includes","result","_id"],"sources":["/home/yoav/autocomplete-search/client/src/AutocompleteSearch.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport SearchResults from './SearchResults';\n\nfunction AutocompleteSearch() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isVisible, setIsVisible] = useState(false);\n  const [history, setHistory] = useState([]);\n  const [searchResults, setSearchResults] = useState(null);\n  const [totalResults, setTotalResults] = useState(0);\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    if (isFocused) {\n        fetch('http://localhost:3000/api/history')\n          .then((response) => response.json())\n          .then((data) => {\n            setHistory(data);\n            setIsVisible(true);\n          })\n          .catch((error) => {\n            console.error(error);\n          });\n      setResults(history);\n      setOpen(true);\n    } else {\n      setTimeout(() => {\n        setIsVisible(false);\n      }, 200);\n    }\n  }, [isFocused]);\n  \n  const handleChange = (event) => {\n    setQuery(event.target.value);\n    setOpen(true);\n  };\n\n  const handleSelect = (suggestion) => {\n    setQuery(suggestion);\n    setResults([]);\n    setOpen(false);\n\n     // store search history\n    fetch('http://localhost:3000/api/history/saveSearch', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ query }),\n    })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(data);\n    })\n    .catch((error) => {\n      console.error(error);\n    });\n\n     // retrieve search results from Google search API\n     fetch(`https://www.googleapis.com/customsearch/v1?key=AIzaSyBXFNm4nYQ6Jhco9Chz2-5D4hSAaSxsoH8&cx=86d9fef699de14b93&q=${suggestion}`)\n     .then((response) => response.json())\n     .then((data) => {\n       setSearchResults(data.items);\n       setTotalResults(data.searchInformation.totalResults);\n     })\n     .catch((error) => {\n       console.error(error);\n     });\n };\n  \n\n  useEffect(() => {\n    if (query.length > 0) {\n      // retrieve suggestions from API\n      fetch(`http://localhost:5000/api/suggestions?q=${query}`)\n        .then((response) =>  response.json())\n        .then((data) => {\n          setResults(\n            data.map((suggestion) => ({\n              ...suggestion,\n              inHistory: history.includes(suggestion.query),\n            }))\n          );\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    } else {\n      setResults([]);\n      setOpen(false);\n    }\n  }, [query])\n  \n  return (\n    <div className=\"search-container\">\n       <input ref={inputRef} className={open ? 'search-input no-border' : 'search-input'} \n       placeholder=\"Search...\" \n       type=\"text\" value={query} \n       onChange={handleChange}\n       onFocus={() => setIsFocused(true)} \n       onBlur={() => setIsFocused(false)}  \n       />\n       \n       {open && (<ul className=\"autocomplete-suggestions\">\n        {results.map((result) => (\n          <li className={`autocomplete-suggestion ${result.inHistory ? 'in-history' : ''}`}  key={result._id} onClick={() => handleSelect(result.query)}>\n            <span className='autocomplete-suggestion-text'>\n              {result.query}</span></li>\n        ))}\n      </ul>\n       )}\n      {totalResults > 0 && (\n        <div className=\"search-results-info\">\n          <p>About {totalResults} results</p>\n        </div>\n      )}\n      {searchResults && <SearchResults results={searchResults} />}\n    </div>\n  );\n}\n\nexport default AutocompleteSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}