{"ast":null,"code":"var _jsxFileName = \"/home/yoav/autocomplete-search/client/src/AutocompleteSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AutocompleteSearch() {\n  _s();\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [history, setHistory] = useState([]);\n  const inputRef = useRef(null);\n  const handleChange = event => {\n    setQuery(event.target.value);\n    setOpen(true);\n  };\n  const handleSelect = suggestion => {\n    setQuery(suggestion);\n    setResults([]);\n    setOpen(false);\n    setHistory([...history, suggestion]);\n  };\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  useEffect(() => {\n    if (query.length > 0) {\n      // retrieve suggestions from API\n      fetch(`http://localhost:5000/api/suggestions?q=${query}`).then(response => response.json()).then(data => {\n        setResults(data.map(suggestion => ({\n          ...suggestion,\n          inHistory: history.includes(suggestion.query)\n        })));\n      }).catch(error => {\n        console.error(error);\n      });\n    } else {\n      setResults([]);\n      setOpen(false);\n    }\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: open ? 'search-input no-border' : 'search-input',\n      placeholder: \"Search...\",\n      type: \"text\",\n      value: query,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 8\n    }, this), open && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"autocomplete-suggestions\",\n      children: results.map(result => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: `autocomplete-suggestion ${result.inHistory ? 'in-history' : ''}`,\n        onClick: () => handleSelect(result.query),\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"autocomplete-suggestion-text\",\n          children: result.query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, result._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AutocompleteSearch, \"Nu36C7Z/GqJ1h3F2ymup+1/x85A=\");\n_c = AutocompleteSearch;\nexport default AutocompleteSearch;\nvar _c;\n$RefreshReg$(_c, \"AutocompleteSearch\");","map":{"version":3,"names":["React","useState","useEffect","useRef","AutocompleteSearch","query","setQuery","results","setResults","open","setOpen","history","setHistory","inputRef","handleChange","event","target","value","handleSelect","suggestion","current","focus","length","fetch","then","response","json","data","map","inHistory","includes","catch","error","console","result","_id"],"sources":["/home/yoav/autocomplete-search/client/src/AutocompleteSearch.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction AutocompleteSearch() {\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [history, setHistory] = useState([]);\n  const inputRef = useRef(null);\n  \n  const handleChange = (event) => {\n    setQuery(event.target.value);\n    setOpen(true);\n  };\n\n  const handleSelect = (suggestion) => {\n    setQuery(suggestion);\n    setResults([]);\n    setOpen(false);\n    setHistory([...history, suggestion]);\n  };\n\n  useEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  useEffect(() => {\n    if (query.length > 0) {\n      // retrieve suggestions from API\n      fetch(`http://localhost:5000/api/suggestions?q=${query}`)\n        .then((response) =>  response.json())\n        .then((data) => {\n          setResults(\n            data.map((suggestion) => ({\n              ...suggestion,\n              inHistory: history.includes(suggestion.query),\n            }))\n          );\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    } else {\n      setResults([]);\n      setOpen(false);\n    }\n  }, [query])\n  \n  return (\n    <div className=\"search-container\">\n       <input  className={open ? 'search-input no-border' : 'search-input'} placeholder=\"Search...\" type=\"text\" value={query} onChange={handleChange} />\n       {open && (<ul className=\"autocomplete-suggestions\">\n        {results.map((result) => (\n          <li className={`autocomplete-suggestion ${result.inHistory ? 'in-history' : ''}`}  key={result._id} onClick={() => handleSelect(result.query)}>\n            <span className='autocomplete-suggestion-text'>\n              {result.query}</span></li>\n        ))}\n      </ul>\n       )}\n    </div>\n  );\n}\n\nexport default AutocompleteSearch;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}